// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  seller
  customer
  admin
}

model User {
  id           Int            @id @default(autoincrement())
  email        String?        @unique
  createdAt    DateTime       @default(now())
  roles        UserRole[]     @default([customer])
  BasketItem   BasketItem[]
  FavoriteItem FavoriteItem[]
}

model EmailCode {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  code      Int
  createdAt DateTime @default(now())
}

model GoodCategory {
  id          Int            @id @default(autoincrement())
  title       String
  description String
  parentId    Int?
  parent      GoodCategory?  @relation("GoodCategory", fields: [parentId], references: [id])
  children    GoodCategory[] @relation("GoodCategory")
  Good        Good[]
  createdAt   DateTime       @default(now())
}

model Brand {
  id          String   @id @default(cuid())
  name        String
  description String?
  goods       Good[]
  createdAt   DateTime @default(now())
}

model Good {
  id           String         @id @default(cuid())
  title        String
  description  String
  price        Float
  categoryId   Int?
  category     GoodCategory?  @relation(fields: [categoryId], references: [id])
  brandId      String?
  brand        Brand?         @relation(fields: [brandId], references: [id])
  BasketItem   BasketItem[]
  FavoriteItem FavoriteItem[]
  createdAt    DateTime       @default(now())
}

model BasketItem {
  id        String   @id @default(cuid())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  goodId    String
  good      Good     @relation(fields: [goodId], references: [id], onDelete: Cascade)
  count     Int
  createdAt DateTime @default(now())
}

model FavoriteItem {
  id        String   @id @default(cuid())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  goodId    String
  good      Good     @relation(fields: [goodId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}
